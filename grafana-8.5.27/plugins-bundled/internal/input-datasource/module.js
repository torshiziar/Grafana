define(["react","@grafana/data","@grafana/ui"],(function(e,t,a){return function(e){var t={};function a(n){if(t[n])return t[n].exports;var r=t[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,a),r.l=!0,r.exports}return a.m=e,a.c=t,a.d=function(e,t,n){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(a.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)a.d(n,r,function(t){return e[t]}.bind(null,r));return n},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="/",a(a.s=3)}([function(t,a){t.exports=e},function(e,a){e.exports=t},function(e,t){e.exports=a},function(e,t,a){"use strict";a.r(t);var n=a(1),r=a(0),s=a.n(r),o=a(2);function i(e){return e&&e.length?Object(n.toCSV)(e.map(e=>Object(n.toDataFrame)(e))):""}class l extends r.PureComponent{constructor(){super(...arguments),this.state={text:""},this.onSeriesParsed=(e,t)=>{const{options:a,onOptionsChange:r}=this.props;e||(e=[new n.MutableDataFrame]);const s=Object.assign(Object.assign({},a.jsonData),{data:e});r(Object.assign(Object.assign({},a),{jsonData:s})),this.setState({text:t})}}componentDidMount(){const{options:e}=this.props;if(e.jsonData.data){const t=i(e.jsonData.data);this.setState({text:t})}}render(){const{text:e}=this.state;return s.a.createElement("div",null,s.a.createElement("div",{className:"gf-form-group"},s.a.createElement("h4",null,"Shared Data:"),s.a.createElement("span",null,"Enter CSV"),s.a.createElement(o.TableInputCSV,{text:e,onSeriesParsed:this.onSeriesParsed,width:"100%",height:200})),s.a.createElement("div",{className:"grafana-info-box"},"This data is stored in the datasource json and is returned to every user in the initial request for any datasource. This is an appropriate place to enter a few values. Large datasets will perform better in other datasources.",s.a.createElement("br",null),s.a.createElement("br",null),s.a.createElement("b",null,"NOTE:")," Changes to this data will only be reflected after a browser refresh."))}}class u extends n.DataSourceApi{constructor(e){super(e),this.data=[],e.jsonData.data&&(this.data=e.jsonData.data.map(e=>Object(n.toDataFrame)(e)))}getQueryDisplayText(e){return e.data?"Panel Data: "+d(e.data):`Shared Data From: ${this.name} (${d(this.data)})`}metricFindQuery(e,t){return new Promise((e,t)=>{const a=[];for(const e of this.data)for(const t of e.fields)a.push({text:t.name});e(a)})}query(e){const t=[];for(const a of e.targets){if(a.hide)continue;let e=this.data;a.data&&(e=a.data.map(e=>Object(n.toDataFrame)(e)));for(let n=0;n<e.length;n++)t.push(Object.assign(Object.assign({},e[n]),{refId:a.refId}))}return Promise.resolve({data:t})}testDatasource(){return new Promise((e,t)=>{let a=0,n=this.data.length+" Series:";for(const e of this.data){const t=e.length;n+=` [${e.fields.length} Fields, ${t} Rows]`,a+=t}a>0&&e({status:"success",message:n}),t({status:"error",message:"No Data Entered"})})}}function c(e){return e&&e.fields&&e.fields.length?e.hasOwnProperty("length")?e.length:e.fields[0].values.length:0}function d(e){if(!e||!e.length)return"";if(e.length>1){const t=e.reduce((e,t)=>e+c(t),0);return`${e.length} Series, ${t} Rows`}const t=e[0];if(!t.fields)return"Missing Fields";const a=c(t);return`${t.fields.length} Fields, ${a} Rows`}const h=[{value:"panel",label:"Panel",description:"Save data in the panel configuration."},{value:"shared",label:"Shared",description:"Save data in the shared datasource object."}];class f extends r.PureComponent{constructor(){super(...arguments),this.state={text:""},this.onSourceChange=e=>{const{datasource:t,query:a,onChange:r,onRunQuery:s}=this.props;let o=void 0;if("panel"===e.value){if(a.data)return;o=[...t.data],o||(o=[new n.MutableDataFrame]),this.setState({text:Object(n.toCSV)(o)})}r(Object.assign(Object.assign({},a),{data:o})),s()},this.onSeriesParsed=(e,t)=>{const{query:a,onChange:r,onRunQuery:s}=this.props;this.setState({text:t}),e||(e=[new n.MutableDataFrame]),r(Object.assign(Object.assign({},a),{data:e})),s()}}onComponentDidMount(){const{query:e}=this.props,t=i(e.data);this.setState({text:t})}render(){const{datasource:e,query:t}=this.props,{uid:a,name:n}=e,{text:r}=this.state,i=t.data?h[0]:h[1];return s.a.createElement("div",null,s.a.createElement(o.InlineField,{label:"Data",labelWidth:8},s.a.createElement(s.a.Fragment,null,s.a.createElement(o.Select,{menuShouldPortal:!0,width:20,options:h,value:i,onChange:this.onSourceChange}),t.data?s.a.createElement("div",{style:{alignSelf:"center"}},d(t.data)):s.a.createElement(o.LinkButton,{variant:"link",href:`datasources/edit/${a}/`},n,": ",d(e.data),"   ",s.a.createElement(o.Icon,{name:"pen"})))),t.data&&s.a.createElement(o.TableInputCSV,{text:r,onSeriesParsed:this.onSeriesParsed,width:"100%",height:200}))}}a.d(t,"plugin",(function(){return p}));const p=new n.DataSourcePlugin(u).setConfigEditor(l).setQueryEditor(f)}])}));
//# sourceMappingURL=module.js.map